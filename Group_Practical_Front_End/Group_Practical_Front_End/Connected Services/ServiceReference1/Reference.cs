//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Group_Practical_Front_End.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/Group_Practical_Back_End")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Cart_ItemsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string First_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> Last_ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> News_letter_SubscriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Registration_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Wish_ListField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Cart_Items {
            get {
                return this.Cart_ItemsField;
            }
            set {
                if ((object.ReferenceEquals(this.Cart_ItemsField, value) != true)) {
                    this.Cart_ItemsField = value;
                    this.RaisePropertyChanged("Cart_Items");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string First_Name {
            get {
                return this.First_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.First_NameField, value) != true)) {
                    this.First_NameField = value;
                    this.RaisePropertyChanged("First_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Last_Active {
            get {
                return this.Last_ActiveField;
            }
            set {
                if ((this.Last_ActiveField.Equals(value) != true)) {
                    this.Last_ActiveField = value;
                    this.RaisePropertyChanged("Last_Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> News_letter_Subscription {
            get {
                return this.News_letter_SubscriptionField;
            }
            set {
                if ((this.News_letter_SubscriptionField.Equals(value) != true)) {
                    this.News_letter_SubscriptionField = value;
                    this.RaisePropertyChanged("News_letter_Subscription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Registration_Date {
            get {
                return this.Registration_DateField;
            }
            set {
                if ((this.Registration_DateField.Equals(value) != true)) {
                    this.Registration_DateField = value;
                    this.RaisePropertyChanged("Registration_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Wish_List {
            get {
                return this.Wish_ListField;
            }
            set {
                if ((object.ReferenceEquals(this.Wish_ListField, value) != true)) {
                    this.Wish_ListField = value;
                    this.RaisePropertyChanged("Wish_List");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/Group_Practical_Back_End")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AvailableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Dimensions_XYZField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> Discount_End_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<decimal> Discount_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> Discount_Start_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManufacturerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Product_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Product_PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Seller_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Weight_KGField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Available {
            get {
                return this.AvailableField;
            }
            set {
                if ((this.AvailableField.Equals(value) != true)) {
                    this.AvailableField = value;
                    this.RaisePropertyChanged("Available");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Dimensions_XYZ {
            get {
                return this.Dimensions_XYZField;
            }
            set {
                if ((object.ReferenceEquals(this.Dimensions_XYZField, value) != true)) {
                    this.Dimensions_XYZField = value;
                    this.RaisePropertyChanged("Dimensions_XYZ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Discount_End_Date {
            get {
                return this.Discount_End_DateField;
            }
            set {
                if ((this.Discount_End_DateField.Equals(value) != true)) {
                    this.Discount_End_DateField = value;
                    this.RaisePropertyChanged("Discount_End_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<decimal> Discount_Price {
            get {
                return this.Discount_PriceField;
            }
            set {
                if ((this.Discount_PriceField.Equals(value) != true)) {
                    this.Discount_PriceField = value;
                    this.RaisePropertyChanged("Discount_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Discount_Start_Date {
            get {
                return this.Discount_Start_DateField;
            }
            set {
                if ((this.Discount_Start_DateField.Equals(value) != true)) {
                    this.Discount_Start_DateField = value;
                    this.RaisePropertyChanged("Discount_Start_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Image {
            get {
                return this.ImageField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageField, value) != true)) {
                    this.ImageField = value;
                    this.RaisePropertyChanged("Image");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Manufacturer {
            get {
                return this.ManufacturerField;
            }
            set {
                if ((object.ReferenceEquals(this.ManufacturerField, value) != true)) {
                    this.ManufacturerField = value;
                    this.RaisePropertyChanged("Manufacturer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Product_Name {
            get {
                return this.Product_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Product_NameField, value) != true)) {
                    this.Product_NameField = value;
                    this.RaisePropertyChanged("Product_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Product_Price {
            get {
                return this.Product_PriceField;
            }
            set {
                if ((this.Product_PriceField.Equals(value) != true)) {
                    this.Product_PriceField = value;
                    this.RaisePropertyChanged("Product_Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Seller_ID {
            get {
                return this.Seller_IDField;
            }
            set {
                if ((this.Seller_IDField.Equals(value) != true)) {
                    this.Seller_IDField = value;
                    this.RaisePropertyChanged("Seller_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Weight_KG {
            get {
                return this.Weight_KGField;
            }
            set {
                if ((this.Weight_KGField.Equals(value) != true)) {
                    this.Weight_KGField = value;
                    this.RaisePropertyChanged("Weight_KG");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Seller", Namespace="http://schemas.datacontract.org/2004/07/Group_Practical_Back_End")]
    [System.SerializableAttribute()]
    public partial class Seller : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Average_RatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Identity_NumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> Last_ActiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Registration_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string S_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string S_SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Average_Rating {
            get {
                return this.Average_RatingField;
            }
            set {
                if ((this.Average_RatingField.Equals(value) != true)) {
                    this.Average_RatingField = value;
                    this.RaisePropertyChanged("Average_Rating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Identity_Number {
            get {
                return this.Identity_NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.Identity_NumberField, value) != true)) {
                    this.Identity_NumberField = value;
                    this.RaisePropertyChanged("Identity_Number");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Last_Active {
            get {
                return this.Last_ActiveField;
            }
            set {
                if ((this.Last_ActiveField.Equals(value) != true)) {
                    this.Last_ActiveField = value;
                    this.RaisePropertyChanged("Last_Active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Registration_Date {
            get {
                return this.Registration_DateField;
            }
            set {
                if ((this.Registration_DateField.Equals(value) != true)) {
                    this.Registration_DateField = value;
                    this.RaisePropertyChanged("Registration_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string S_Name {
            get {
                return this.S_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.S_NameField, value) != true)) {
                    this.S_NameField = value;
                    this.RaisePropertyChanged("S_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string S_Surname {
            get {
                return this.S_SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.S_SurnameField, value) != true)) {
                    this.S_SurnameField = value;
                    this.RaisePropertyChanged("S_Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/Group_Practical_Back_End")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Emploee_TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Employee_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Emploee_Type {
            get {
                return this.Emploee_TypeField;
            }
            set {
                if ((this.Emploee_TypeField.Equals(value) != true)) {
                    this.Emploee_TypeField = value;
                    this.RaisePropertyChanged("Emploee_Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Employee_Name {
            get {
                return this.Employee_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Employee_NameField, value) != true)) {
                    this.Employee_NameField = value;
                    this.RaisePropertyChanged("Employee_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Query", Namespace="http://schemas.datacontract.org/2004/07/Group_Practical_Back_End")]
    [System.SerializableAttribute()]
    public partial class Query : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AnsweredField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Customer_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Query_MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Query_SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Submission_DateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Answered {
            get {
                return this.AnsweredField;
            }
            set {
                if ((this.AnsweredField.Equals(value) != true)) {
                    this.AnsweredField = value;
                    this.RaisePropertyChanged("Answered");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Customer_Name {
            get {
                return this.Customer_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.Customer_NameField, value) != true)) {
                    this.Customer_NameField = value;
                    this.RaisePropertyChanged("Customer_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Query_Message {
            get {
                return this.Query_MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.Query_MessageField, value) != true)) {
                    this.Query_MessageField = value;
                    this.RaisePropertyChanged("Query_Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Query_Subject {
            get {
                return this.Query_SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.Query_SubjectField, value) != true)) {
                    this.Query_SubjectField = value;
                    this.RaisePropertyChanged("Query_Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Submission_Date {
            get {
                return this.Submission_DateField;
            }
            set {
                if ((this.Submission_DateField.Equals(value) != true)) {
                    this.Submission_DateField = value;
                    this.RaisePropertyChanged("Submission_Date");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Invoice", Namespace="http://schemas.datacontract.org/2004/07/Group_Practical_Back_End")]
    [System.SerializableAttribute()]
    public partial class Invoice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Customer_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Delivery_MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string First_NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Payment_MethodField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Products_IDSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProvinceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Shipping_CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Total_CostField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TownField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Transaction_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Zip_CodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Customer_Id {
            get {
                return this.Customer_IdField;
            }
            set {
                if ((this.Customer_IdField.Equals(value) != true)) {
                    this.Customer_IdField = value;
                    this.RaisePropertyChanged("Customer_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Delivery_Method {
            get {
                return this.Delivery_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.Delivery_MethodField, value) != true)) {
                    this.Delivery_MethodField = value;
                    this.RaisePropertyChanged("Delivery_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string First_Name {
            get {
                return this.First_NameField;
            }
            set {
                if ((object.ReferenceEquals(this.First_NameField, value) != true)) {
                    this.First_NameField = value;
                    this.RaisePropertyChanged("First_Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Payment_Method {
            get {
                return this.Payment_MethodField;
            }
            set {
                if ((object.ReferenceEquals(this.Payment_MethodField, value) != true)) {
                    this.Payment_MethodField = value;
                    this.RaisePropertyChanged("Payment_Method");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Products_IDS {
            get {
                return this.Products_IDSField;
            }
            set {
                if ((object.ReferenceEquals(this.Products_IDSField, value) != true)) {
                    this.Products_IDSField = value;
                    this.RaisePropertyChanged("Products_IDS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Province {
            get {
                return this.ProvinceField;
            }
            set {
                if ((object.ReferenceEquals(this.ProvinceField, value) != true)) {
                    this.ProvinceField = value;
                    this.RaisePropertyChanged("Province");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Shipping_Cost {
            get {
                return this.Shipping_CostField;
            }
            set {
                if ((this.Shipping_CostField.Equals(value) != true)) {
                    this.Shipping_CostField = value;
                    this.RaisePropertyChanged("Shipping_Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Street {
            get {
                return this.StreetField;
            }
            set {
                if ((object.ReferenceEquals(this.StreetField, value) != true)) {
                    this.StreetField = value;
                    this.RaisePropertyChanged("Street");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Total_Cost {
            get {
                return this.Total_CostField;
            }
            set {
                if ((this.Total_CostField.Equals(value) != true)) {
                    this.Total_CostField = value;
                    this.RaisePropertyChanged("Total_Cost");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Town {
            get {
                return this.TownField;
            }
            set {
                if ((object.ReferenceEquals(this.TownField, value) != true)) {
                    this.TownField = value;
                    this.RaisePropertyChanged("Town");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Transaction_Date {
            get {
                return this.Transaction_DateField;
            }
            set {
                if ((this.Transaction_DateField.Equals(value) != true)) {
                    this.Transaction_DateField = value;
                    this.RaisePropertyChanged("Transaction_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip_Code {
            get {
                return this.Zip_CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.Zip_CodeField, value) != true)) {
                    this.Zip_CodeField = value;
                    this.RaisePropertyChanged("Zip_Code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Coupon", Namespace="http://schemas.datacontract.org/2004/07/Group_Practical_Back_End")]
    [System.SerializableAttribute()]
    public partial class Coupon : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Coupon_ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Creation_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Customer_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Employee_IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> Use_DateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UsedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Coupon_Value {
            get {
                return this.Coupon_ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.Coupon_ValueField, value) != true)) {
                    this.Coupon_ValueField = value;
                    this.RaisePropertyChanged("Coupon_Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Creation_Date {
            get {
                return this.Creation_DateField;
            }
            set {
                if ((this.Creation_DateField.Equals(value) != true)) {
                    this.Creation_DateField = value;
                    this.RaisePropertyChanged("Creation_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Customer_Id {
            get {
                return this.Customer_IdField;
            }
            set {
                if ((this.Customer_IdField.Equals(value) != true)) {
                    this.Customer_IdField = value;
                    this.RaisePropertyChanged("Customer_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Employee_Id {
            get {
                return this.Employee_IdField;
            }
            set {
                if ((this.Employee_IdField.Equals(value) != true)) {
                    this.Employee_IdField = value;
                    this.RaisePropertyChanged("Employee_Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> Use_Date {
            get {
                return this.Use_DateField;
            }
            set {
                if ((this.Use_DateField.Equals(value) != true)) {
                    this.Use_DateField = value;
                    this.RaisePropertyChanged("Use_Date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Used {
            get {
                return this.UsedField;
            }
            set {
                if ((this.UsedField.Equals(value) != true)) {
                    this.UsedField = value;
                    this.RaisePropertyChanged("Used");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUser", ReplyAction="http://tempuri.org/IService1/addUserResponse")]
        bool addUser(string username, string password, string surname, string name, string email, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addUser", ReplyAction="http://tempuri.org/IService1/addUserResponse")]
        System.Threading.Tasks.Task<bool> addUserAsync(string username, string password, string surname, string name, string email, string phone);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserById", ReplyAction="http://tempuri.org/IService1/getUserByIdResponse")]
        Group_Practical_Front_End.ServiceReference1.User getUserById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserById", ReplyAction="http://tempuri.org/IService1/getUserByIdResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.User> getUserByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchUser", ReplyAction="http://tempuri.org/IService1/searchUserResponse")]
        bool searchUser(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchUser", ReplyAction="http://tempuri.org/IService1/searchUserResponse")]
        System.Threading.Tasks.Task<bool> searchUserAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserID", ReplyAction="http://tempuri.org/IService1/getUserIDResponse")]
        int getUserID(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserID", ReplyAction="http://tempuri.org/IService1/getUserIDResponse")]
        System.Threading.Tasks.Task<int> getUserIDAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSellerId", ReplyAction="http://tempuri.org/IService1/getSellerIdResponse")]
        int getSellerId(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSellerId", ReplyAction="http://tempuri.org/IService1/getSellerIdResponse")]
        System.Threading.Tasks.Task<int> getSellerIdAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProductByID", ReplyAction="http://tempuri.org/IService1/getProductByIDResponse")]
        Group_Practical_Front_End.ServiceReference1.Product getProductByID(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProductByID", ReplyAction="http://tempuri.org/IService1/getProductByIDResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Product> getProductByIDAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSellerByID", ReplyAction="http://tempuri.org/IService1/getSellerByIDResponse")]
        Group_Practical_Front_End.ServiceReference1.Seller getSellerByID(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSellerByID", ReplyAction="http://tempuri.org/IService1/getSellerByIDResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Seller> getSellerByIDAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProducts", ReplyAction="http://tempuri.org/IService1/getProductsResponse")]
        Group_Practical_Front_End.ServiceReference1.Product[] getProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProducts", ReplyAction="http://tempuri.org/IService1/getProductsResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Product[]> getProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addProduct", ReplyAction="http://tempuri.org/IService1/addProductResponse")]
        bool addProduct(Group_Practical_Front_End.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addProduct", ReplyAction="http://tempuri.org/IService1/addProductResponse")]
        System.Threading.Tasks.Task<bool> addProductAsync(Group_Practical_Front_End.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editProduct", ReplyAction="http://tempuri.org/IService1/editProductResponse")]
        bool editProduct(Group_Practical_Front_End.ServiceReference1.Product prod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editProduct", ReplyAction="http://tempuri.org/IService1/editProductResponse")]
        System.Threading.Tasks.Task<bool> editProductAsync(Group_Practical_Front_End.ServiceReference1.Product prod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateProduct", ReplyAction="http://tempuri.org/IService1/updateProductResponse")]
        bool updateProduct(Group_Practical_Front_End.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/updateProduct", ReplyAction="http://tempuri.org/IService1/updateProductResponse")]
        System.Threading.Tasks.Task<bool> updateProductAsync(Group_Practical_Front_End.ServiceReference1.Product product);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProduct", ReplyAction="http://tempuri.org/IService1/getProductResponse")]
        Group_Practical_Front_End.ServiceReference1.Product getProduct(string prodName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProduct", ReplyAction="http://tempuri.org/IService1/getProductResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Product> getProductAsync(string prodName);
        
        // CODEGEN: Generating message contract since the wrapper name (getProductById) of message getProductByIdRequest does not match the default value (getProductById1)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProductById", ReplyAction="http://tempuri.org/IService1/getProductByIdResponse")]
        Group_Practical_Front_End.ServiceReference1.getProductByIdResponse getProductById1(Group_Practical_Front_End.ServiceReference1.getProductByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProductById", ReplyAction="http://tempuri.org/IService1/getProductByIdResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.getProductByIdResponse> getProductById1Async(Group_Practical_Front_End.ServiceReference1.getProductByIdRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addSeller", ReplyAction="http://tempuri.org/IService1/addSellerResponse")]
        bool addSeller(Group_Practical_Front_End.ServiceReference1.Seller seller);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addSeller", ReplyAction="http://tempuri.org/IService1/addSellerResponse")]
        System.Threading.Tasks.Task<bool> addSellerAsync(Group_Practical_Front_End.ServiceReference1.Seller seller);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/gettingSellerByID", ReplyAction="http://tempuri.org/IService1/gettingSellerByIDResponse")]
        Group_Practical_Front_End.ServiceReference1.Seller gettingSellerByID(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/gettingSellerByID", ReplyAction="http://tempuri.org/IService1/gettingSellerByIDResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Seller> gettingSellerByIDAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchSeller", ReplyAction="http://tempuri.org/IService1/searchSellerResponse")]
        bool searchSeller(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchSeller", ReplyAction="http://tempuri.org/IService1/searchSellerResponse")]
        System.Threading.Tasks.Task<bool> searchSellerAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addToCart", ReplyAction="http://tempuri.org/IService1/addToCartResponse")]
        bool addToCart(int UserId, int productId, int add);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addToCart", ReplyAction="http://tempuri.org/IService1/addToCartResponse")]
        System.Threading.Tasks.Task<bool> addToCartAsync(int UserId, int productId, int add);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeFromCart", ReplyAction="http://tempuri.org/IService1/removeFromCartResponse")]
        bool removeFromCart(int UserId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeFromCart", ReplyAction="http://tempuri.org/IService1/removeFromCartResponse")]
        System.Threading.Tasks.Task<bool> removeFromCartAsync(int UserId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchProduct", ReplyAction="http://tempuri.org/IService1/searchProductResponse")]
        bool searchProduct(string productName, string productCategory, string productManufacturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchProduct", ReplyAction="http://tempuri.org/IService1/searchProductResponse")]
        System.Threading.Tasks.Task<bool> searchProductAsync(string productName, string productCategory, string productManufacturer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setUserActive", ReplyAction="http://tempuri.org/IService1/setUserActiveResponse")]
        bool setUserActive(int userId, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setUserActive", ReplyAction="http://tempuri.org/IService1/setUserActiveResponse")]
        System.Threading.Tasks.Task<bool> setUserActiveAsync(int userId, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setSellerActive", ReplyAction="http://tempuri.org/IService1/setSellerActiveResponse")]
        bool setSellerActive(int sellerId, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/setSellerActive", ReplyAction="http://tempuri.org/IService1/setSellerActiveResponse")]
        System.Threading.Tasks.Task<bool> setSellerActiveAsync(int sellerId, System.DateTime date);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEmployeeByID", ReplyAction="http://tempuri.org/IService1/getEmployeeByIDResponse")]
        Group_Practical_Front_End.ServiceReference1.Employee getEmployeeByID(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEmployeeByID", ReplyAction="http://tempuri.org/IService1/getEmployeeByIDResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Employee> getEmployeeByIDAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addEmployee", ReplyAction="http://tempuri.org/IService1/addEmployeeResponse")]
        bool addEmployee(Group_Practical_Front_End.ServiceReference1.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addEmployee", ReplyAction="http://tempuri.org/IService1/addEmployeeResponse")]
        System.Threading.Tasks.Task<bool> addEmployeeAsync(Group_Practical_Front_End.ServiceReference1.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchEmployee", ReplyAction="http://tempuri.org/IService1/searchEmployeeResponse")]
        bool searchEmployee(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/searchEmployee", ReplyAction="http://tempuri.org/IService1/searchEmployeeResponse")]
        System.Threading.Tasks.Task<bool> searchEmployeeAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEmployeeID", ReplyAction="http://tempuri.org/IService1/getEmployeeIDResponse")]
        int getEmployeeID(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getEmployeeID", ReplyAction="http://tempuri.org/IService1/getEmployeeIDResponse")]
        System.Threading.Tasks.Task<int> getEmployeeIDAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addQuery", ReplyAction="http://tempuri.org/IService1/addQueryResponse")]
        bool addQuery(Group_Practical_Front_End.ServiceReference1.Query query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addQuery", ReplyAction="http://tempuri.org/IService1/addQueryResponse")]
        System.Threading.Tasks.Task<bool> addQueryAsync(Group_Practical_Front_End.ServiceReference1.Query query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQueries", ReplyAction="http://tempuri.org/IService1/GetQueriesResponse")]
        Group_Practical_Front_End.ServiceReference1.Query[] GetQueries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQueries", ReplyAction="http://tempuri.org/IService1/GetQueriesResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Query[]> GetQueriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/markQueryRead", ReplyAction="http://tempuri.org/IService1/markQueryReadResponse")]
        bool markQueryRead(Group_Practical_Front_End.ServiceReference1.Query query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/markQueryRead", ReplyAction="http://tempuri.org/IService1/markQueryReadResponse")]
        System.Threading.Tasks.Task<bool> markQueryReadAsync(Group_Practical_Front_End.ServiceReference1.Query query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQueryByID", ReplyAction="http://tempuri.org/IService1/GetQueryByIDResponse")]
        Group_Practical_Front_End.ServiceReference1.Query GetQueryByID(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetQueryByID", ReplyAction="http://tempuri.org/IService1/GetQueryByIDResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Query> GetQueryByIDAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteCart", ReplyAction="http://tempuri.org/IService1/deleteCartResponse")]
        bool deleteCart(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteCart", ReplyAction="http://tempuri.org/IService1/deleteCartResponse")]
        System.Threading.Tasks.Task<bool> deleteCartAsync(int UserId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoices", ReplyAction="http://tempuri.org/IService1/GetInvoicesResponse")]
        Group_Practical_Front_End.ServiceReference1.Invoice[] GetInvoices();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoices", ReplyAction="http://tempuri.org/IService1/GetInvoicesResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Invoice[]> GetInvoicesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoiceByID", ReplyAction="http://tempuri.org/IService1/GetInvoiceByIDResponse")]
        Group_Practical_Front_End.ServiceReference1.Invoice GetInvoiceByID(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoiceByID", ReplyAction="http://tempuri.org/IService1/GetInvoiceByIDResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Invoice> GetInvoiceByIDAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addInvoice", ReplyAction="http://tempuri.org/IService1/addInvoiceResponse")]
        int addInvoice(Group_Practical_Front_End.ServiceReference1.Invoice invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addInvoice", ReplyAction="http://tempuri.org/IService1/addInvoiceResponse")]
        System.Threading.Tasks.Task<int> addInvoiceAsync(Group_Practical_Front_End.ServiceReference1.Invoice invoice);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoiceByUserID", ReplyAction="http://tempuri.org/IService1/GetInvoiceByUserIDResponse")]
        Group_Practical_Front_End.ServiceReference1.Invoice GetInvoiceByUserID(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetInvoiceByUserID", ReplyAction="http://tempuri.org/IService1/GetInvoiceByUserIDResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Invoice> GetInvoiceByUserIDAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditPassword", ReplyAction="http://tempuri.org/IService1/EditPasswordResponse")]
        bool EditPassword(int userId, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/EditPassword", ReplyAction="http://tempuri.org/IService1/EditPasswordResponse")]
        System.Threading.Tasks.Task<bool> EditPasswordAsync(int userId, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserIdByEmail", ReplyAction="http://tempuri.org/IService1/getUserIdByEmailResponse")]
        int getUserIdByEmail(string username, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getUserIdByEmail", ReplyAction="http://tempuri.org/IService1/getUserIdByEmailResponse")]
        System.Threading.Tasks.Task<int> getUserIdByEmailAsync(string username, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addToWishList", ReplyAction="http://tempuri.org/IService1/addToWishListResponse")]
        bool addToWishList(int userId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addToWishList", ReplyAction="http://tempuri.org/IService1/addToWishListResponse")]
        System.Threading.Tasks.Task<bool> addToWishListAsync(int userId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeFromWishList", ReplyAction="http://tempuri.org/IService1/removeFromWishListResponse")]
        bool removeFromWishList(int userId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/removeFromWishList", ReplyAction="http://tempuri.org/IService1/removeFromWishListResponse")]
        System.Threading.Tasks.Task<bool> removeFromWishListAsync(int userId, int productId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addCoupon", ReplyAction="http://tempuri.org/IService1/addCouponResponse")]
        bool addCoupon(Group_Practical_Front_End.ServiceReference1.Coupon coupon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addCoupon", ReplyAction="http://tempuri.org/IService1/addCouponResponse")]
        System.Threading.Tasks.Task<bool> addCouponAsync(Group_Practical_Front_End.ServiceReference1.Coupon coupon);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteCoupon", ReplyAction="http://tempuri.org/IService1/deleteCouponResponse")]
        bool deleteCoupon(string couponValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/deleteCoupon", ReplyAction="http://tempuri.org/IService1/deleteCouponResponse")]
        System.Threading.Tasks.Task<bool> deleteCouponAsync(string couponValue);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addCouponValue", ReplyAction="http://tempuri.org/IService1/addCouponValueResponse")]
        bool addCouponValue(int couponId, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addCouponValue", ReplyAction="http://tempuri.org/IService1/addCouponValueResponse")]
        System.Threading.Tasks.Task<bool> addCouponValueAsync(int couponId, string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCouponId", ReplyAction="http://tempuri.org/IService1/getCouponIdResponse")]
        int getCouponId(int customerId, System.DateTime creationTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getCouponId", ReplyAction="http://tempuri.org/IService1/getCouponIdResponse")]
        System.Threading.Tasks.Task<int> getCouponIdAsync(int customerId, System.DateTime creationTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateCouponById", ReplyAction="http://tempuri.org/IService1/ValidateCouponByIdResponse")]
        bool ValidateCouponById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ValidateCouponById", ReplyAction="http://tempuri.org/IService1/ValidateCouponByIdResponse")]
        System.Threading.Tasks.Task<bool> ValidateCouponByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCouponPrice", ReplyAction="http://tempuri.org/IService1/GetCouponPriceResponse")]
        decimal GetCouponPrice(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetCouponPrice", ReplyAction="http://tempuri.org/IService1/GetCouponPriceResponse")]
        System.Threading.Tasks.Task<decimal> GetCouponPriceAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/onGet", ReplyAction="http://tempuri.org/IService1/onGetResponse")]
        void onGet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/onGet", ReplyAction="http://tempuri.org/IService1/onGetResponse")]
        System.Threading.Tasks.Task onGetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProductReport", ReplyAction="http://tempuri.org/IService1/getProductReportResponse")]
        Group_Practical_Front_End.ServiceReference1.Product[] getProductReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getProductReport", ReplyAction="http://tempuri.org/IService1/getProductReportResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Product[]> getProductReportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSellerReport", ReplyAction="http://tempuri.org/IService1/getSellerReportResponse")]
        Group_Practical_Front_End.ServiceReference1.Seller[] getSellerReport();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/getSellerReport", ReplyAction="http://tempuri.org/IService1/getSellerReportResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Seller[]> getSellerReportAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addEmployeee", ReplyAction="http://tempuri.org/IService1/addEmployeeeResponse")]
        bool addEmployeee(string employeeName, string surname, string employee_Type, string email, string password, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/addEmployeee", ReplyAction="http://tempuri.org/IService1/addEmployeeeResponse")]
        System.Threading.Tasks.Task<bool> addEmployeeeAsync(string employeeName, string surname, string employee_Type, string email, string password, string userName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editUser", ReplyAction="http://tempuri.org/IService1/editUserResponse")]
        bool editUser(Group_Practical_Front_End.ServiceReference1.User prod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editUser", ReplyAction="http://tempuri.org/IService1/editUserResponse")]
        System.Threading.Tasks.Task<bool> editUserAsync(Group_Practical_Front_End.ServiceReference1.User prod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editSellerDetails", ReplyAction="http://tempuri.org/IService1/editSellerDetailsResponse")]
        bool editSellerDetails(Group_Practical_Front_End.ServiceReference1.Seller seller);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editSellerDetails", ReplyAction="http://tempuri.org/IService1/editSellerDetailsResponse")]
        System.Threading.Tasks.Task<bool> editSellerDetailsAsync(Group_Practical_Front_End.ServiceReference1.Seller seller);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/gettingEmployeeByID", ReplyAction="http://tempuri.org/IService1/gettingEmployeeByIDResponse")]
        Group_Practical_Front_End.ServiceReference1.Employee gettingEmployeeByID(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/gettingEmployeeByID", ReplyAction="http://tempuri.org/IService1/gettingEmployeeByIDResponse")]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Employee> gettingEmployeeByIDAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editEmployeeDetails", ReplyAction="http://tempuri.org/IService1/editEmployeeDetailsResponse")]
        bool editEmployeeDetails(Group_Practical_Front_End.ServiceReference1.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/editEmployeeDetails", ReplyAction="http://tempuri.org/IService1/editEmployeeDetailsResponse")]
        System.Threading.Tasks.Task<bool> editEmployeeDetailsAsync(Group_Practical_Front_End.ServiceReference1.Employee employee);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductById", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductByIdRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int prodID;
        
        public getProductByIdRequest() {
        }
        
        public getProductByIdRequest(int prodID) {
            this.prodID = prodID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="getProductByIdResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class getProductByIdResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Group_Practical_Front_End.ServiceReference1.Product getProductByIdResult;
        
        public getProductByIdResponse() {
        }
        
        public getProductByIdResponse(Group_Practical_Front_End.ServiceReference1.Product getProductByIdResult) {
            this.getProductByIdResult = getProductByIdResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Group_Practical_Front_End.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Group_Practical_Front_End.ServiceReference1.IService1>, Group_Practical_Front_End.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool addUser(string username, string password, string surname, string name, string email, string phone) {
            return base.Channel.addUser(username, password, surname, name, email, phone);
        }
        
        public System.Threading.Tasks.Task<bool> addUserAsync(string username, string password, string surname, string name, string email, string phone) {
            return base.Channel.addUserAsync(username, password, surname, name, email, phone);
        }
        
        public Group_Practical_Front_End.ServiceReference1.User getUserById(int id) {
            return base.Channel.getUserById(id);
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.User> getUserByIdAsync(int id) {
            return base.Channel.getUserByIdAsync(id);
        }
        
        public bool searchUser(string username, string password) {
            return base.Channel.searchUser(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> searchUserAsync(string username, string password) {
            return base.Channel.searchUserAsync(username, password);
        }
        
        public int getUserID(string username, string password) {
            return base.Channel.getUserID(username, password);
        }
        
        public System.Threading.Tasks.Task<int> getUserIDAsync(string username, string password) {
            return base.Channel.getUserIDAsync(username, password);
        }
        
        public int getSellerId(string username, string password) {
            return base.Channel.getSellerId(username, password);
        }
        
        public System.Threading.Tasks.Task<int> getSellerIdAsync(string username, string password) {
            return base.Channel.getSellerIdAsync(username, password);
        }
        
        public Group_Practical_Front_End.ServiceReference1.Product getProductByID(int Id) {
            return base.Channel.getProductByID(Id);
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Product> getProductByIDAsync(int Id) {
            return base.Channel.getProductByIDAsync(Id);
        }
        
        public Group_Practical_Front_End.ServiceReference1.Seller getSellerByID(int Id) {
            return base.Channel.getSellerByID(Id);
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Seller> getSellerByIDAsync(int Id) {
            return base.Channel.getSellerByIDAsync(Id);
        }
        
        public Group_Practical_Front_End.ServiceReference1.Product[] getProducts() {
            return base.Channel.getProducts();
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Product[]> getProductsAsync() {
            return base.Channel.getProductsAsync();
        }
        
        public bool addProduct(Group_Practical_Front_End.ServiceReference1.Product product) {
            return base.Channel.addProduct(product);
        }
        
        public System.Threading.Tasks.Task<bool> addProductAsync(Group_Practical_Front_End.ServiceReference1.Product product) {
            return base.Channel.addProductAsync(product);
        }
        
        public bool editProduct(Group_Practical_Front_End.ServiceReference1.Product prod) {
            return base.Channel.editProduct(prod);
        }
        
        public System.Threading.Tasks.Task<bool> editProductAsync(Group_Practical_Front_End.ServiceReference1.Product prod) {
            return base.Channel.editProductAsync(prod);
        }
        
        public bool updateProduct(Group_Practical_Front_End.ServiceReference1.Product product) {
            return base.Channel.updateProduct(product);
        }
        
        public System.Threading.Tasks.Task<bool> updateProductAsync(Group_Practical_Front_End.ServiceReference1.Product product) {
            return base.Channel.updateProductAsync(product);
        }
        
        public Group_Practical_Front_End.ServiceReference1.Product getProduct(string prodName) {
            return base.Channel.getProduct(prodName);
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Product> getProductAsync(string prodName) {
            return base.Channel.getProductAsync(prodName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Group_Practical_Front_End.ServiceReference1.getProductByIdResponse Group_Practical_Front_End.ServiceReference1.IService1.getProductById1(Group_Practical_Front_End.ServiceReference1.getProductByIdRequest request) {
            return base.Channel.getProductById1(request);
        }
        
        public Group_Practical_Front_End.ServiceReference1.Product getProductById1(int prodID) {
            Group_Practical_Front_End.ServiceReference1.getProductByIdRequest inValue = new Group_Practical_Front_End.ServiceReference1.getProductByIdRequest();
            inValue.prodID = prodID;
            Group_Practical_Front_End.ServiceReference1.getProductByIdResponse retVal = ((Group_Practical_Front_End.ServiceReference1.IService1)(this)).getProductById1(inValue);
            return retVal.getProductByIdResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.getProductByIdResponse> Group_Practical_Front_End.ServiceReference1.IService1.getProductById1Async(Group_Practical_Front_End.ServiceReference1.getProductByIdRequest request) {
            return base.Channel.getProductById1Async(request);
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.getProductByIdResponse> getProductById1Async(int prodID) {
            Group_Practical_Front_End.ServiceReference1.getProductByIdRequest inValue = new Group_Practical_Front_End.ServiceReference1.getProductByIdRequest();
            inValue.prodID = prodID;
            return ((Group_Practical_Front_End.ServiceReference1.IService1)(this)).getProductById1Async(inValue);
        }
        
        public bool addSeller(Group_Practical_Front_End.ServiceReference1.Seller seller) {
            return base.Channel.addSeller(seller);
        }
        
        public System.Threading.Tasks.Task<bool> addSellerAsync(Group_Practical_Front_End.ServiceReference1.Seller seller) {
            return base.Channel.addSellerAsync(seller);
        }
        
        public Group_Practical_Front_End.ServiceReference1.Seller gettingSellerByID(int Id) {
            return base.Channel.gettingSellerByID(Id);
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Seller> gettingSellerByIDAsync(int Id) {
            return base.Channel.gettingSellerByIDAsync(Id);
        }
        
        public bool searchSeller(string username, string password) {
            return base.Channel.searchSeller(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> searchSellerAsync(string username, string password) {
            return base.Channel.searchSellerAsync(username, password);
        }
        
        public bool addToCart(int UserId, int productId, int add) {
            return base.Channel.addToCart(UserId, productId, add);
        }
        
        public System.Threading.Tasks.Task<bool> addToCartAsync(int UserId, int productId, int add) {
            return base.Channel.addToCartAsync(UserId, productId, add);
        }
        
        public bool removeFromCart(int UserId, int productId) {
            return base.Channel.removeFromCart(UserId, productId);
        }
        
        public System.Threading.Tasks.Task<bool> removeFromCartAsync(int UserId, int productId) {
            return base.Channel.removeFromCartAsync(UserId, productId);
        }
        
        public bool searchProduct(string productName, string productCategory, string productManufacturer) {
            return base.Channel.searchProduct(productName, productCategory, productManufacturer);
        }
        
        public System.Threading.Tasks.Task<bool> searchProductAsync(string productName, string productCategory, string productManufacturer) {
            return base.Channel.searchProductAsync(productName, productCategory, productManufacturer);
        }
        
        public bool setUserActive(int userId, System.DateTime date) {
            return base.Channel.setUserActive(userId, date);
        }
        
        public System.Threading.Tasks.Task<bool> setUserActiveAsync(int userId, System.DateTime date) {
            return base.Channel.setUserActiveAsync(userId, date);
        }
        
        public bool setSellerActive(int sellerId, System.DateTime date) {
            return base.Channel.setSellerActive(sellerId, date);
        }
        
        public System.Threading.Tasks.Task<bool> setSellerActiveAsync(int sellerId, System.DateTime date) {
            return base.Channel.setSellerActiveAsync(sellerId, date);
        }
        
        public Group_Practical_Front_End.ServiceReference1.Employee getEmployeeByID(int Id) {
            return base.Channel.getEmployeeByID(Id);
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Employee> getEmployeeByIDAsync(int Id) {
            return base.Channel.getEmployeeByIDAsync(Id);
        }
        
        public bool addEmployee(Group_Practical_Front_End.ServiceReference1.Employee employee) {
            return base.Channel.addEmployee(employee);
        }
        
        public System.Threading.Tasks.Task<bool> addEmployeeAsync(Group_Practical_Front_End.ServiceReference1.Employee employee) {
            return base.Channel.addEmployeeAsync(employee);
        }
        
        public bool searchEmployee(string username, string password) {
            return base.Channel.searchEmployee(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> searchEmployeeAsync(string username, string password) {
            return base.Channel.searchEmployeeAsync(username, password);
        }
        
        public int getEmployeeID(string username, string password) {
            return base.Channel.getEmployeeID(username, password);
        }
        
        public System.Threading.Tasks.Task<int> getEmployeeIDAsync(string username, string password) {
            return base.Channel.getEmployeeIDAsync(username, password);
        }
        
        public bool addQuery(Group_Practical_Front_End.ServiceReference1.Query query) {
            return base.Channel.addQuery(query);
        }
        
        public System.Threading.Tasks.Task<bool> addQueryAsync(Group_Practical_Front_End.ServiceReference1.Query query) {
            return base.Channel.addQueryAsync(query);
        }
        
        public Group_Practical_Front_End.ServiceReference1.Query[] GetQueries() {
            return base.Channel.GetQueries();
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Query[]> GetQueriesAsync() {
            return base.Channel.GetQueriesAsync();
        }
        
        public bool markQueryRead(Group_Practical_Front_End.ServiceReference1.Query query) {
            return base.Channel.markQueryRead(query);
        }
        
        public System.Threading.Tasks.Task<bool> markQueryReadAsync(Group_Practical_Front_End.ServiceReference1.Query query) {
            return base.Channel.markQueryReadAsync(query);
        }
        
        public Group_Practical_Front_End.ServiceReference1.Query GetQueryByID(int Id) {
            return base.Channel.GetQueryByID(Id);
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Query> GetQueryByIDAsync(int Id) {
            return base.Channel.GetQueryByIDAsync(Id);
        }
        
        public bool deleteCart(int UserId) {
            return base.Channel.deleteCart(UserId);
        }
        
        public System.Threading.Tasks.Task<bool> deleteCartAsync(int UserId) {
            return base.Channel.deleteCartAsync(UserId);
        }
        
        public Group_Practical_Front_End.ServiceReference1.Invoice[] GetInvoices() {
            return base.Channel.GetInvoices();
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Invoice[]> GetInvoicesAsync() {
            return base.Channel.GetInvoicesAsync();
        }
        
        public Group_Practical_Front_End.ServiceReference1.Invoice GetInvoiceByID(int ID) {
            return base.Channel.GetInvoiceByID(ID);
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Invoice> GetInvoiceByIDAsync(int ID) {
            return base.Channel.GetInvoiceByIDAsync(ID);
        }
        
        public int addInvoice(Group_Practical_Front_End.ServiceReference1.Invoice invoice) {
            return base.Channel.addInvoice(invoice);
        }
        
        public System.Threading.Tasks.Task<int> addInvoiceAsync(Group_Practical_Front_End.ServiceReference1.Invoice invoice) {
            return base.Channel.addInvoiceAsync(invoice);
        }
        
        public Group_Practical_Front_End.ServiceReference1.Invoice GetInvoiceByUserID(int Id) {
            return base.Channel.GetInvoiceByUserID(Id);
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Invoice> GetInvoiceByUserIDAsync(int Id) {
            return base.Channel.GetInvoiceByUserIDAsync(Id);
        }
        
        public bool EditPassword(int userId, string newPassword) {
            return base.Channel.EditPassword(userId, newPassword);
        }
        
        public System.Threading.Tasks.Task<bool> EditPasswordAsync(int userId, string newPassword) {
            return base.Channel.EditPasswordAsync(userId, newPassword);
        }
        
        public int getUserIdByEmail(string username, string email) {
            return base.Channel.getUserIdByEmail(username, email);
        }
        
        public System.Threading.Tasks.Task<int> getUserIdByEmailAsync(string username, string email) {
            return base.Channel.getUserIdByEmailAsync(username, email);
        }
        
        public bool addToWishList(int userId, int productId) {
            return base.Channel.addToWishList(userId, productId);
        }
        
        public System.Threading.Tasks.Task<bool> addToWishListAsync(int userId, int productId) {
            return base.Channel.addToWishListAsync(userId, productId);
        }
        
        public bool removeFromWishList(int userId, int productId) {
            return base.Channel.removeFromWishList(userId, productId);
        }
        
        public System.Threading.Tasks.Task<bool> removeFromWishListAsync(int userId, int productId) {
            return base.Channel.removeFromWishListAsync(userId, productId);
        }
        
        public bool addCoupon(Group_Practical_Front_End.ServiceReference1.Coupon coupon) {
            return base.Channel.addCoupon(coupon);
        }
        
        public System.Threading.Tasks.Task<bool> addCouponAsync(Group_Practical_Front_End.ServiceReference1.Coupon coupon) {
            return base.Channel.addCouponAsync(coupon);
        }
        
        public bool deleteCoupon(string couponValue) {
            return base.Channel.deleteCoupon(couponValue);
        }
        
        public System.Threading.Tasks.Task<bool> deleteCouponAsync(string couponValue) {
            return base.Channel.deleteCouponAsync(couponValue);
        }
        
        public bool addCouponValue(int couponId, string value) {
            return base.Channel.addCouponValue(couponId, value);
        }
        
        public System.Threading.Tasks.Task<bool> addCouponValueAsync(int couponId, string value) {
            return base.Channel.addCouponValueAsync(couponId, value);
        }
        
        public int getCouponId(int customerId, System.DateTime creationTime) {
            return base.Channel.getCouponId(customerId, creationTime);
        }
        
        public System.Threading.Tasks.Task<int> getCouponIdAsync(int customerId, System.DateTime creationTime) {
            return base.Channel.getCouponIdAsync(customerId, creationTime);
        }
        
        public bool ValidateCouponById(int id) {
            return base.Channel.ValidateCouponById(id);
        }
        
        public System.Threading.Tasks.Task<bool> ValidateCouponByIdAsync(int id) {
            return base.Channel.ValidateCouponByIdAsync(id);
        }
        
        public decimal GetCouponPrice(int id) {
            return base.Channel.GetCouponPrice(id);
        }
        
        public System.Threading.Tasks.Task<decimal> GetCouponPriceAsync(int id) {
            return base.Channel.GetCouponPriceAsync(id);
        }
        
        public void onGet() {
            base.Channel.onGet();
        }
        
        public System.Threading.Tasks.Task onGetAsync() {
            return base.Channel.onGetAsync();
        }
        
        public Group_Practical_Front_End.ServiceReference1.Product[] getProductReport() {
            return base.Channel.getProductReport();
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Product[]> getProductReportAsync() {
            return base.Channel.getProductReportAsync();
        }
        
        public Group_Practical_Front_End.ServiceReference1.Seller[] getSellerReport() {
            return base.Channel.getSellerReport();
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Seller[]> getSellerReportAsync() {
            return base.Channel.getSellerReportAsync();
        }
        
        public bool addEmployeee(string employeeName, string surname, string employee_Type, string email, string password, string userName) {
            return base.Channel.addEmployeee(employeeName, surname, employee_Type, email, password, userName);
        }
        
        public System.Threading.Tasks.Task<bool> addEmployeeeAsync(string employeeName, string surname, string employee_Type, string email, string password, string userName) {
            return base.Channel.addEmployeeeAsync(employeeName, surname, employee_Type, email, password, userName);
        }
        
        public bool editUser(Group_Practical_Front_End.ServiceReference1.User prod) {
            return base.Channel.editUser(prod);
        }
        
        public System.Threading.Tasks.Task<bool> editUserAsync(Group_Practical_Front_End.ServiceReference1.User prod) {
            return base.Channel.editUserAsync(prod);
        }
        
        public bool editSellerDetails(Group_Practical_Front_End.ServiceReference1.Seller seller) {
            return base.Channel.editSellerDetails(seller);
        }
        
        public System.Threading.Tasks.Task<bool> editSellerDetailsAsync(Group_Practical_Front_End.ServiceReference1.Seller seller) {
            return base.Channel.editSellerDetailsAsync(seller);
        }
        
        public Group_Practical_Front_End.ServiceReference1.Employee gettingEmployeeByID(int Id) {
            return base.Channel.gettingEmployeeByID(Id);
        }
        
        public System.Threading.Tasks.Task<Group_Practical_Front_End.ServiceReference1.Employee> gettingEmployeeByIDAsync(int Id) {
            return base.Channel.gettingEmployeeByIDAsync(Id);
        }
        
        public bool editEmployeeDetails(Group_Practical_Front_End.ServiceReference1.Employee employee) {
            return base.Channel.editEmployeeDetails(employee);
        }
        
        public System.Threading.Tasks.Task<bool> editEmployeeDetailsAsync(Group_Practical_Front_End.ServiceReference1.Employee employee) {
            return base.Channel.editEmployeeDetailsAsync(employee);
        }
    }
}
